/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id("org.apache.beam.module")
  id("scala")
  id("com.github.prokod.gradle-crossbuild") version "0.14.1"
}

ext {
  junitVersion = "5.9.1"
  bsonMongoVersion = "4.7.2"
  log4jVersion = "2.19.0"
}

applyJavaNature(automaticModuleName: "org.apache.beam.sdk.io.azure.tablestorage")

description = "Apache Beam :: SDKs :: Java :: IO :: Azure Table Storage"
ext.summary = "IO library to read and write Azure Table Storage services from Beam."

//archivesBaseName = 'lib'
//crossBuild {
//  builds {
//    v212
//    v213
//  }
//}

dependencies {
  implementation("com.azure:azure-data-tables:12.3.6")
  implementation("org.scala-lang:scala-library:2.12.17")
  implementation("com.azure:azure-core:1.35.0")
  implementation("com.azure:azure-core-serializer-json-jackson:1.2.24")
  implementation("com.azure:azure-json:1.0.0-beta.1")
  implementation("com.azure:azure-xml:1.0.0-beta.1")
  implementation library.java.commons_io
  permitUnusedDeclared library.java.commons_io
  implementation library.java.slf4j_api
  implementation project(path: ":sdks:java:core", configuration: "shadow")
  implementation project(":sdks:java:extensions:kryo")
}

// TEST
dependencies {
//  testImplementation("com.outr:scribe_?:3.10.5")
  testImplementation("com.outr:scribe_2.12:3.10.5")
//  testImplementation("com.outr:scribe-slf4j_?:3.10.5")
  testImplementation("com.outr:scribe-slf4j_2.12:3.10.5")
  testImplementation project(path: ":sdks:java:core", configuration: "shadowTest")
  testImplementation library.java.mockito_core
  testImplementation("org.junit.vintage:junit-vintage-engine:${junitVersion}")
  testRuntimeOnly("org.apache.logging.log4j:log4j-api:$log4jVersion")
  testRuntimeOnly("org.apache.logging.log4j:log4j-core:$log4jVersion")
  testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
}
